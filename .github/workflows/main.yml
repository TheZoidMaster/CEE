name: build and release

on:
    push:
        tags:
            - "v*.*.*"

jobs:
    build:
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ubuntu-latest, windows-latest, macos-latest]
                arch: [x64]

        steps:
            - name: checkout repo
              uses: actions/checkout@v3

            - name: setup dotnet 9
              uses: actions/setup-dotnet@v3
              with:
                  dotnet-version: "9.0.x"

            - name: publish app
              shell: bash
              run: |
                  RID=$([[ "${{ matrix.os }}" == "windows-latest" ]] && echo "win-x64" || ([[ "${{ matrix.os }}" == "ubuntu-latest" ]] && echo "linux-x64" || echo "osx-x64"))
                  dotnet publish ./CEE.csproj -c Release \
                    /p:RuntimeIdentifier=$RID \
                    /p:SelfContained=true \
                    /p:PublishSingleFile=true \
                    /p:DebugType=None \
                    /p:DebugSymbols=false \
                    -o ./publish/${{ matrix.os }}

            - name: zip published files
              shell: bash
              run: |
                  RID=$([[ "${{ matrix.os }}" == "windows-latest" ]] && echo "win-x64" || ([[ "${{ matrix.os }}" == "ubuntu-latest" ]] && echo "linux-x64" || echo "osx-x64"))
                  cd ./publish/${{ matrix.os }}
                  zip -r ../../cee-${RID}.zip .

            - name: upload artifact
              uses: actions/upload-artifact@v4
              with:
                  name: cee-${{ matrix.os == 'windows-latest' && 'win-x64' || matrix.os == 'ubuntu-latest' && 'linux-x64' || 'osx-x64' }}
                  path: ./cee-*.zip

    release:
        needs: build
        runs-on: ubuntu-latest
        steps:
            - name: download artifacts
              uses: actions/download-artifact@v4
              with:
                  path: ./artifacts

            - name: install gh cli
              run: |
                  sudo apt update
                  sudo apt install -y gh

            - name: create release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: ${{ github.ref_name }}
                  release_name: Release ${{ github.ref_name }}
                  draft: false
                  prerelease: false

            - name: upload release assets
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: |
                  for file in ./artifacts/*.zip; do
                    gh release upload ${{ github.ref_name }} "$file"
                  done
